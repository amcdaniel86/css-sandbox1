
* {
  box-sizing: border-box; /* magical, helps with fitting/ floats */
}

body {
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.4em;
}

/* Centering Elements */
.container {
  /* width: 960px; */
  margin: 30px auto;
  /* set container element with margin auto, auto margin sets equal margin left and right so content is perfectly in the middle. */
  /* margin auto leaves margin even on both sides of target styled object, you can put a margin for top and bottom, if auto is sides. */
  max-width: 960px;
  /* always max width on containers */
  /* max-width perfect answer for responsive web pages for mobile devices. it'll be width of viewport until it hits value, then width stops stretching. */
}

.clr {
  clear: both;
}

.box {
  background: #f4f4f4;
  border: 1px solid #333;
  padding: 20px;
  margin-bottom: 15px;
}

.box p {
  /* Text Align */
  text-align: left;
  text-align: right;
  text-align: center;
  text-align: justify; /* makes edges all even */
  /* can leave each one above it; if any below, the lowest one will override the above style. */
  /* when screen condensed, lines up text perfectly on sides. center just centers it, no regard to side alignment. */
}

#box-2 {
  float: left;
  width: 68%;
}

#box-3 {
  float: right;
  width: 30%;
}
/* Floats */
/* always add a width when floating an object, balance the %'s to make them align correctly. */
/* a div class="clr", .clr {clear: both} is always needed in between other objects and any floating objects so they do not overlap */
